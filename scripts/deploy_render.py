#!/usr/bin/env python3
"""
Script para configurar y desplegar en Render
"""
import os
import subprocess
import sys
from pathlib import Path

def check_files():
    """Verificar que los archivos necesarios existen"""
    print("üìã Verificando archivos necesarios...")

    required_files = ['Procfile', 'runtime.txt', 'requirements.txt']
    missing_files = []

    for file in required_files:
        if Path(file).exists():
            print(f"   ‚úÖ {file}")
        else:
            missing_files.append(file)
            print(f"   ‚ùå {file}")

    if missing_files:
        print(f"\n‚ùå Faltan archivos: {', '.join(missing_files)}")
        return False

    return True

def create_render_service():
    """Crear configuraci√≥n para Render"""
    print("\nüîß Configurando servicio para Render...")

    # Verificar que render.yaml existe
    if not Path('render.yaml').exists():
        print("‚ùå render.yaml no encontrado")
        return False

    print("   ‚úÖ render.yaml configurado")
    print("   ‚úÖ Variables de entorno incluidas")
    print("   ‚úÖ Base de datos PostgreSQL incluida")

    return True

def show_deployment_steps():
    """Mostrar pasos para desplegar en Render"""
    print("\nüöÄ PASOS PARA DESPLEGAR EN RENDER:")
    print("="*50)

    print("\n1Ô∏è‚É£ CREAR CUENTA EN RENDER:")
    print("   ‚Ä¢ Ve a: https://render.com")
    print("   ‚Ä¢ Reg√≠strate con GitHub/GitLab")
    print("   ‚Ä¢ Autoriza acceso a tu repositorio")

    print("\n2Ô∏è‚É£ CONECTAR REPOSITORIO:")
    print("   ‚Ä¢ En Render Dashboard, haz clic en 'New'")
    print("   ‚Ä¢ Selecciona 'Blueprint'")
    print("   ‚Ä¢ Busca tu repositorio")

    print("\n3Ô∏è‚É£ CONFIGURAR SERVICIO:")
    print("   ‚Ä¢ Nombre: diabetes-prediction-api")
    print("   ‚Ä¢ Runtime: Python 3")
    print("   ‚Ä¢ Build Command: pip install -r requirements.txt")
    print("   ‚Ä¢ Start Command: python api.py --host 0.0.0.0 --port $PORT")

    print("\n4Ô∏è‚É£ VARIABLES DE ENTORNO (se configuran autom√°ticamente):")
    variables = [
        "ENVIRONMENT=production",
        "DEBUG=false",
        "LOG_LEVEL=INFO",
        "SECRET_KEY (generada autom√°ticamente)",
        "JWT_SECRET_KEY (generada autom√°ticamente)",
        "API_HOST=0.0.0.0",
        "API_PORT=8002",
        "STREAMLIT_SERVER_ADDRESS=0.0.0.0",
        "STREAMLIT_SERVER_PORT=8501",
        "STREAMLIT_SERVER_HEADLESS=true",
        "MLFLOW_TRACKING_URI=file:///app/outputs/mlruns",
        "MLFLOW_HOST=0.0.0.0",
        "MLFLOW_PORT=5002"
    ]

    for var in variables:
        print(f"   ‚Ä¢ {var}")

    print("\n5Ô∏è‚É£ BASE DE DATOS:")
    print("   ‚Ä¢ Render crear√° autom√°ticamente PostgreSQL")
    print("   ‚Ä¢ Variable DATABASE_URL se configurar√° autom√°ticamente")

    print("\n6Ô∏è‚É£ DESPLEGAR:")
    print("   ‚Ä¢ Haz clic en 'Create Service'")
    print("   ‚Ä¢ Espera 3-5 minutos")
    print("   ‚Ä¢ ¬°Tu API estar√° lista!")

def show_urls():
    """Mostrar URLs esperadas"""
    print("\nüåê URLS QUE OBTENDR√ÅS:")
    print("="*30)
    print("   ‚Ä¢ API REST: https://diabetes-api.onrender.com")
    print("   ‚Ä¢ Documentaci√≥n: https://diabetes-api.onrender.com/docs")
    print("   ‚Ä¢ Health Check: https://diabetes-api.onrender.com/health")
    print("   ‚Ä¢ Base de datos: Autom√°tica en Render")

def main():
    """Funci√≥n principal"""
    print("üöÄ CONFIGURACI√ìN PARA DESPLIEGUE EN RENDER")
    print("="*50)

    # Verificar archivos
    if not check_files():
        return 1

    # Verificar configuraci√≥n
    if not create_render_service():
        return 1

    # Mostrar pasos
    show_deployment_steps()

    # Mostrar URLs
    show_urls()

    print("\n‚úÖ ¬°CONFIGURACI√ìN COMPLETADA!")
    print("\nüéØ VENTAJAS DE RENDER PARA TU SISTEMA:")
    print("   ‚Ä¢ ‚ö° Mejor performance para ML")
    print("   ‚Ä¢ üí∞ Base de datos incluida gratis")
    print("   ‚Ä¢ üåç Mejor latencia para Latinoam√©rica")
    print("   ‚Ä¢ üìä Analytics incluidos")
    print("   ‚Ä¢ üîÑ Despliegues autom√°ticos")

    print("\nüí° CONSEJO:")
    print("   Render es la opci√≥n m√°s r√°pida y econ√≥mica para tu")
    print("   Sistema Predictivo de Diabetes. ¬°Tendr√°s todo funcionando")
    print("   en menos de 10 minutos!")

    return 0

if __name__ == "__main__":
    sys.exit(main())