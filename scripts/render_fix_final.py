#!/usr/bin/env python3
"""
GU√çA FINAL PARA ARREGLAR RENDER - PASO A PASO
"""

print("üîß GU√çA FINAL: ARREGLAR RENDER EN 5 PASOS")
print("="*50)

print("\nüéØ OBJETIVO:")
print("   Cambiar tu servicio de Docker a Python 3 nativo")

print("\nüìç PASO 1: ACCEDER A LA CONFIGURACI√ìN")
print("   1. Ve a: https://dashboard.render.com")
print("   2. Selecciona tu servicio: 'delfosA1C8.3'")
print("   3. Ve a la pesta√±a: 'Settings'")
print("   4. Busca la secci√≥n: 'Build & Deploy'")

print("\nüìç PASO 2: CAMBIAR DE DOCKER A PYTHON")
print("   En 'Build & Deploy', busca:")
print("   ")
print("   Dockerfile Path: ./Dockerfile  ‚Üê CAMBIA ESTO")
print("   ")
print("   C√°mbialo a:")
print("   ")
print("   Dockerfile Path: No Dockerfile  ‚Üê NUEVO VALOR")
print("   ")
print("   ‚ö†Ô∏è IMPORTANTE: Despu√©s de cambiar esto,")
print("   aparecer√°n autom√°ticamente los campos:")
print("   - Runtime: Python 3")
print("   - Build Command")
print("   - Start Command")

print("\nüìç PASO 3: CONFIGURAR COMANDOS")
print("   Una vez que aparezcan los campos nuevos:")
print("   ")
print("   Build Command:")
print("   pip install -r requirements.txt")
print("   ")
print("   Start Command:")
print("   python api.py --host 0.0.0.0 --port $PORT")

print("\nüìç PASO 4: VARIABLES DE ENTORNO")
print("   1. Ve a la pesta√±a: 'Environment'")
print("   2. Haz clic en: 'Add Environment Variable'")
print("   3. Agrega estas 13 variables:")
print("   ")
print("   ENVIRONMENT = production")
print("   DEBUG = false")
print("   LOG_LEVEL = INFO")
print("   SECRET_KEY = diabetes-secret-key-2025-super-seguro")
print("   JWT_SECRET_KEY = diabetes-jwt-secret-key-2025-super-seguro")
print("   API_HOST = 0.0.0.0")
print("   API_PORT = 8002")
print("   STREAMLIT_SERVER_ADDRESS = 0.0.0.0")
print("   STREAMLIT_SERVER_PORT = 8501")
print("   STREAMLIT_SERVER_HEADLESS = true")
print("   MLFLOW_TRACKING_URI = file:///app/outputs/mlruns")
print("   MLFLOW_HOST = 0.0.0.0")
print("   MLFLOW_PORT = 5002")

print("\nüìç PASO 5: HEALTH CHECK")
print("   1. Ve a la pesta√±a: 'Settings'")
print("   2. Busca: 'Health Check Path'")
print("   3. Cambia de '/healthz' a '/health'")

print("\nüìç PASO 6: GUARDAR Y DESPLEGAR")
print("   1. Haz clic en: 'Save Changes'")
print("   2. Espera 3-5 minutos")
print("   3. Tu URL ser√°: https://delfosa1c8-3.onrender.com")

print("\n" + "="*50)
print("‚úÖ VERIFICACI√ìN FINAL")
print("="*50)

print("\nüß™ PRUEBA TU API:")
print("   curl https://delfosa1c8-3.onrender.com/health")
print("   ")
print("   Deber√≠as ver: 'status': 'healthy'")

print("\nüìö PRUEBA LA DOCUMENTACI√ìN:")
print("   https://delfosa1c8-3.onrender.com/docs")

print("\nüîÆ PRUEBA UNA PREDICCI√ìN:")
print("   curl -X POST https://delfosa1c8-3.onrender.com/predict \\")
print("        -H 'Content-Type: application/json' \\")
print("        -d '{\"glucose\":120,\"blood_pressure\":80,\"insulin\":100,\"bmi\":25.0,\"age\":45,\"skin_thickness\":20}'")

print("\n" + "="*50)
print("üö® SI ALGO FALLA")
print("="*50)

print("\nüîç REVISAR LOGS:")
print("   1. En Render dashboard, ve a 'Logs'")
print("   2. Busca errores en rojo")
print("   3. Copia el error y dime qu√© dice")

print("\nüí° POSIBLES ERRORES:")
print("   ‚Ä¢ 'Module not found': Falta alguna dependencia")
print("   ‚Ä¢ 'Port already in use': Conflicto de puertos")
print("   ‚Ä¢ 'Model loading failed': Problema con modelos ML")
print("   ‚Ä¢ 'Database connection': Error de BD")

print("\nüìû AYUDA:")
print("   Si ves alg√∫n error, copia el mensaje completo")
print("   y te ayudo a solucionarlo espec√≠ficamente.")

print("\nüéâ ¬°√âXITO!")
print("   Una vez funcionando, tendr√°s:")
print("   ‚Ä¢ API REST funcionando")
print("   ‚Ä¢ 15 modelos ML listos")
print("   ‚Ä¢ Documentaci√≥n autom√°tica")
print("   ‚Ä¢ Base de datos PostgreSQL")
print("   ‚Ä¢ Auto-scaling autom√°tico")

print("\n‚è±Ô∏è TIEMPO ESTIMADO: 10-15 minutos")
print("üí∞ COSTO: $0 (gratuito para desarrollo)")